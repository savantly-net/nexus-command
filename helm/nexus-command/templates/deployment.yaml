apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nexus-command.fullname" . }}
  labels:
    {{- include "nexus-command.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nexus-command.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nexus-command.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nexus-command.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            # Spring profiles configuration - includes k8s profile for ConfigMap-based configuration
            - name: SPRING_PROFILES_ACTIVE
              value: "k8s,POSTGRESQL{{ if .Values.applicationConfig.nexus.security.oauth2.enabled }},OAUTH2{{ end }}"
            # PROTOTYPING mode is for development
            - name: PROTOTYPING
              value: "false"
            # Additional environment variables from values
            {{- range $key, $value := .Values.extraEnvVars }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            
            # Additional environment variables from secrets
            {{- range .Values.extraEnvVarsSecret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .secretKey }}
            {{- end }}
            
            # Additional environment variables from config maps
            {{- range .Values.extraEnvVarsConfigMap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .configMapName }}
                  key: {{ .configMapKey }}
            {{- end }}

          # Handle external database existing secret for password
          {{- if and (not .Values.postgresql.enabled) .Values.externalDatabase.existingSecret }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret }}
                  key: {{ .Values.externalDatabase.existingSecretPasswordKey }}
          {{- end }}
          
          # Load all environment variables from the unified Secret
          {{- if .Values.secrets }}
          envFrom:
            - secretRef:
                name: {{ include "nexus-command.fullname" . }}-env
          {{- end }}
          
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            # Mount ConfigMap containing application-k8s.yml
            {{- if .Values.applicationConfig }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
            # Additional volume mounts from values
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        # ConfigMap volume for application configuration
        {{- if .Values.applicationConfig }}
        - name: config
          configMap:
            name: {{ include "nexus-command.fullname" . }}-config
        {{- end }}
        # Additional volumes from values
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
